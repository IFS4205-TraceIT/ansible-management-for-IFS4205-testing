- name: Push anonymized data to PostgreSQL
  hosts: cicd
  gather_facts: no
  become: yes # Sudo as root

  tasks:

    - name: Clear previous files
      ansible.builtin.file:
        path: /home/anonymize
        state: absent

    - name: Create anonymize user
      ansible.builtin.user:
        name: anonymize
        shell: /bin/false # Don't allow login

    - name: Add certificate
      ansible.builtin.copy:
        dest: /home/anonymize/server.crt
        owner: anonymize
        group: anonymize
        mode: 0400
        src: /home/cicd/server.crt
        remote_src: yes

    - name: Add private key
      ansible.builtin.copy:
        dest: /home/anonymize/server.key
        owner: anonymize
        group: anonymize
        mode: 0400
        src: /home/cicd/server.key
        remote_src: yes

    - name: Add Python Repository
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa

    - name: Update to Python 3.10
      ansible.builtin.apt:
        name: python3.10

    - name: Install poetry
      become: yes
      become_user: anonymize
      ansible.builtin.shell:
        cmd: curl -sSL https://install.python-poetry.org | python3.10 -
      args:
        creates: /home/anonymize/.local/bin/poetry

    - name: Checkout repository
      become: yes
      become_user: anonymize
      ansible.builtin.git:
        repo: "https://{{ lookup('ansible.builtin.env', 'PAT') }}@github.com/IFS4205-TraceIT/kanonymity"
        dest: /home/anonymize/repo

    - name: Install dependencies
      become: yes
      become_user: anonymize
      args:
        chdir: /home/anonymize/repo
      ansible.builtin.shell: |
        export PATH=/home/anonymize/.local/bin:$PATH
        poetry config --local virtualenvs.options.no-setuptools false
        poetry config --local virtualenvs.options.no-pip true
        poetry install --no-interaction

    - name: Delete .git
      become: yes
      become_user: anonymize
      ansible.builtin.file:
        path: /home/anonymize/repo/.git
        state: absent

    - name: Delete README.md
      become: yes
      become_user: anonymize
      ansible.builtin.file:
        path: /home/anonymize/repo/README.md
        state: absent

    - name: Print K level
      debug:
        msg:
          - "K-Anonymity Level: {{ lookup('ansible.builtin.env', 'K') }}"

    - name: Push anonymized data
      become: yes
      become_user: anonymize
      args:
        chdir: /home/anonymize/repo
      ansible.builtin.shell: |
        export PATH=/home/anonymize/.local/bin:$PATH
        poetry run python generate_anon_data.py --k {{ lookup('ansible.builtin.env', 'K') }}
      environment:
        # PostgreSQL
        POSTGRES_HOST:              "{{ lookup('ansible.builtin.env', 'POSTGRES_HOST') }}"
        POSTGRES_PORT:              "{{ lookup('ansible.builtin.env', 'POSTGRES_PORT') }}"
        POSTGRES_DB:                maindb
        POSTGRES_USER:              "{{ lookup('ansible.builtin.env', 'POSTGRES_USER') }}"
        POSTGRES_PASSWORD:          "{{ lookup('ansible.builtin.env', 'POSTGRES_PASSWORD') }}"
        POSTGRES_SSL_ROOT_CERT:          /usr/local/share/ca-certificates/traceit-ca.crt
        POSTGRES_SSL_CERT:               /home/anonymize/server.crt
        POSTGRES_SSL_KEY:                /home/anonymize/server.key

        POSTGRES_RESEARCH_HOST:     "{{ lookup('ansible.builtin.env', 'POSTGRES_RESEARCH_HOST') }}"
        POSTGRES_RESEARCH_PORT:     "{{ lookup('ansible.builtin.env', 'POSTGRES_RESEARCH_PORT') }}"
        POSTGRES_RESEARCH_DB:       researchsdb
        POSTGRES_RESEARCH_USER:     "{{ lookup('ansible.builtin.env', 'POSTGRES_RESEARCH_USER') }}"
        POSTGRES_RESEARCH_PASSWORD: "{{ lookup('ansible.builtin.env', 'POSTGRES_RESEARCH_PASSWORD') }}"
        POSTGRES_RESEARCH_SSL_ROOT_CERT: /usr/local/share/ca-certificates/traceit-ca.crt
        POSTGRES_RESEARCH_SSL_CERT:      /home/anonymize/server.crt
        POSTGRES_RESEARCH_SSL_KEY:       /home/anonymize/server.key
      register: anonymizations
    - debug: msg={{ anonymizations.stdout_lines }}

